@model DesafioWebApplication.Models.Entidades.ComunicadoEntity

@{
    ViewBag.Title = "Envio de Comunicado";
}

<h2>Envio de Comunicado</h2>


@using (Html.BeginForm("comunicado", "api", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.Label("Tipo Assunto", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TipoAssunto, (SelectList)ViewBag.TipoAssunto, "Selecione...", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TipoAssunto, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Nome Usuário", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.NomeUsuario, (SelectList)ViewBag.NomeUsuarios, "Selecione...", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.NomeUsuario, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" id="responsaveis" style="display:none">
        @Html.Label("Destinatário", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Destinatario, (SelectList)ViewBag.EmailResponsaveis, "Selecione...", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Destinatario, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" id="administradoras" style="display:none">
        @Html.Label("Destinatário", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Destinatario, (SelectList)ViewBag.EmailAdministradoras, "Selecione...", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Destinatario, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Comunicado", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.TextoComunicado, new { @class = "form-control", @rows = "4", @cols = "10", @maxlength = "250", @placeholder = "Digite aqui seu comunicado..." })
            @Html.ValidationMessageFor(model => model.TextoComunicado, "", new { @class = "text-danger" })
        </div>
    </div>

    <br />
    <br />

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Enviar" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/app/Comunicado.js"></script>
}
